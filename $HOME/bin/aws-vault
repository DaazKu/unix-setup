#!/usr/bin/env bash
set -euo pipefail

AWS_VAULT_BIN_LOCATION=`whereis -a aws-vault | cut -d' ' -f3`

if ! command -v flock &> /dev/null
then
    echo "flock could not be found. Install it!"
    exit 1
fi

# Use `AWS_VAULT_CLI_LOCK=false aws-vault ...` if you want to skip locking. This is useful in cases where you are already logged and a lot of concurrent requests are issued.
# Good example would be something like this: `... | parallel -- AWS_VAULT_CLI_LOCK=false kubectl delete ...` where you want to delete many things at once.
if [[ "${AWS_VAULT_CLI_LOCK:-true}" == "false" ]]; then
    ${AWS_VAULT_BIN_LOCATION} "$@"
else
    # If aws-vault hangs for some reason it might be because of a lock problem. Try using it like so: `AWS_VAULT_CLI_CLEAR_LOCK=true aws-vault ...` and it should fix the problemn.`
    if [[ "${AWS_VAULT_CLI_CLEAR_LOCK:-false}" == "true" ]]; then
        rm -f /tmp/aws-vault.lock
    fi
    (
    # Try to acquire lock for 30 seconds
    flock -w 2 100 || exit 3

    ${AWS_VAULT_BIN_LOCATION} "$@"
    ) 100>>/tmp/aws-vault.lock
fi
